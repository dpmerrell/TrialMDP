// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// block_rar_opt
void block_rar_opt(int n_patients, int block_incr, double error_cost, double block_cost, std::string sqlite_fname, float smoothing);
RcppExport SEXP _blockRARopt_block_rar_opt(SEXP n_patientsSEXP, SEXP block_incrSEXP, SEXP error_costSEXP, SEXP block_costSEXP, SEXP sqlite_fnameSEXP, SEXP smoothingSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n_patients(n_patientsSEXP);
    Rcpp::traits::input_parameter< int >::type block_incr(block_incrSEXP);
    Rcpp::traits::input_parameter< double >::type error_cost(error_costSEXP);
    Rcpp::traits::input_parameter< double >::type block_cost(block_costSEXP);
    Rcpp::traits::input_parameter< std::string >::type sqlite_fname(sqlite_fnameSEXP);
    Rcpp::traits::input_parameter< float >::type smoothing(smoothingSEXP);
    block_rar_opt(n_patients, block_incr, error_cost, block_cost, sqlite_fname, smoothing);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_blockRARopt_block_rar_opt", (DL_FUNC) &_blockRARopt_block_rar_opt, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_blockRARopt(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
